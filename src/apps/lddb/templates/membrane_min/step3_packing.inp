* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) on Aug, 19. 2013.
* GENERATES LIPID PACKING USING A BIG SPHERE
*

! Read topology and parameter files
stream toppar.str

read psf card name step1_pdbreader.psf

stream step2.1_pore.str
read coor card name step2.1_pore.crd

! Read the system information
stream step3_size.str
stream step3_nlipids_upper.prm
stream step3_nlipids_lower.prm

! Read toppar for big-spheres (POL) 
stream step3_packing_pol.str

! Generate big-spheres (POL) for upper leaflet
read sequence POL @NLIPTOP
generate UPPO warn

! Generate big-spheres (POL) for lower leaflet
read sequence POL @NLIPBOT
generate DNPO warn

rename resname POPC select segid UPPO .or. segid DNPO end

! First, guess available regions for initial positions of the big-spheres (150%)
calc Ainit = @A * 1.5
calc Binit = @B * 1.5

! Define the boundary for non-accessible regions of the big-spheres
define uppo sele ( .not. ( segid UPPO .or. segid DNPO ) ) .and. ( prop Z .gt.  10 ) .and. (prop Z .lt.  20 ) end
if ?nsel .gt. 0 then
   coor stat sele uppo end
   calc xpup = ?xmax
   calc xnup = ?xmin
   calc ypup = ?ymax
   calc ynup = ?ymin
else
   calc xpup = 0
   calc xnup = 0
   calc ypup = 0
   calc ynup = 0
endif

define dnpo sele ( .not. ( segid UPPO .or. segid DNPO ) ) .and. ( prop Z .gt. -20 ) .and. (prop Z .lt. -10 ) end
if ?nsel .gt. 0 then
   coor stat sele dnpo end
   calc xpdn = ?xmax
   calc xndn = ?xmin
   calc ypdn = ?ymax
   calc yndn = ?ymin
else
   calc xpdn = 0
   calc xndn = 0
   calc ypdn = 0
   calc yndn = 0
endif

! to prevent infinite-loop
calc A2 = @A/2
calc B2 = @A/2
if xpup .gt.  @A2 stop
if xnup .lt. -@A2 stop
if ypup .gt.  @B2 stop
if ynup .lt. -@B2 stop
if xpdn .gt.  @A2 stop
if xndn .lt. -@A2 stop
if ypdn .gt.  @B2 stop
if yndn .lt. -@B2 stop

!----------------------------------------------------------------------
! Put big-spheres molecules at random positions

! Random number generation
RAND UNIF ISEED 1376945652 SCALE 1.0

calc i = 1

label do_up

  label rand_up
  calc xpos = ?random
  calc ypos = ?random
  calc xpos = @Ainit * ( @xpos - 0.5 )
  if xpos .gt. @xnup if xpos .lt. @xpup goto rand_up
  calc ypos = @Binit * ( @ypos - 0.5 )
  if ypos .gt. @ynup if ypos .lt. @ypup goto rand_up
  calc zpos = 12.0 

  coor set xdir @xpos  ydir @ypos  zdir @zpos select segid UPPO .and. resid @i end

  MMFP
  GEO plane  RCM -
      xref 0.0  yref 0.0  zref  @zpos  zdir 1.0 -
      force  100.0   select segid UPPO .and. resi @i end
  END

incr i by 1
if i le @NLIPTOP goto do_up


calc i = 1

label do_dn

  label rand_dn
  calc xpos = ?random
  calc ypos = ?random
  calc xpos = @Ainit * ( @xpos - 0.5 )
  if xpos .gt. @xndn if xpos .lt. @xpdn goto rand_dn
  calc ypos = @Binit * ( @ypos - 0.5 )
  if ypos .gt. @yndn if ypos .lt. @ypdn goto rand_dn
  calc zpos = -12.0 

  coor set xdir @xpos  ydir @ypos  zdir @zpos select segid DNPO .and. resid @i end

  MMFP
  GEO plane  RCM -
      xref 0.0  yref 0.0  zref  @zpos  zdir 1.0 -
      force  100.0   select segid DNPO .and. resi @i end
  END

incr i by 1
if i le @NLIPBOT goto do_dn

rename SEGid HEAD sele segid UPPO end
join HEAD DNPO renumber

!------------------------------------------------------------------------------
! Build the Periodic Boundary Conditions and
! Carry out Minimization and Dynamics for Equilibration of Large Spheres
! 6 cycles to reduce the Ainit and Binit back to original A and B

cons fix sele .not. segid HEAD end

set i = 5

label do_packing

calc Ainit = @A * 1.@i
calc Binit = @B * 1.@i

if i .ne. 5 crystal free
crystal define @xtltype @Ainit @Binit 10000.0 @Alpha @beta @Gamma

open read unit 10 card name crystal_image.str
crystal read unit 10 card
close unit 10

image byresid xcen 0.0 ycen 0.0 zcen 0.0 sele segid HEAD end

!setup nonbond option (eps=80)
nbonds atom switch cdie vdw vfswitch  -
       ctonnb 20.0 ctofnb 22.0 cutnb 26.0 cutim 26.0 -
       inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 80.0

ENERGY

mini sd   nstep 200    nprint 10
mini abnr nstep 200    nprint 10

scalar fbeta set  10.0 select all end

DYNAMICS  start       nstep   1000  timestp  0.001 iprfrq   1000  nprint 100  -
          iasvel    1 firstt 300.0  finalt   300.0 tstruc  300.0  -
          langevin    tbath  300.0  rbuf       0.0 -
          inbfrq   -1 imgfrq    -1  ihbfrq       0 ilbfrq      0  -
          iunread  -1  -
          iunwrite -1  -
          iuncrd   -1 nsavcrd    0  -
          iunvelo  -1 nsavvelo   0  -
          kunit    -1  

decrease i by 1
if i .ge. 0 goto do_packing

updat cutim 35.0 imall

open write card unit 1 name step3_packing.pdb
write coor pdb  unit 1 image
close unit 1

!
! HEAD ONLY
!

crystal free
define junk sele .not. segid HEAD end
if ?nsel .ne. 0 delete atom sele junk end

open write card unit 10 name step3_packing_head.crd
write coor card unit 10 

open write card unit 10 name step3_packing_head.pdb
write coor pdb  unit 10 

open write unit 10 card name step3_packing_head.psf
write psf  unit 10 card

stop
